{"is_source_file": true, "format": "Java", "description": "This file contains Spring Security configuration for JWT-based stateless authentication, defining security beans, endpoint permissions, and filter setup.", "external_files": ["com.example.notesbackend.security.JwtAuthenticationFilter", "com.example.notesbackend.security.JwtService", "com.example.notesbackend.service.UserService", "org.springframework.security.authentication.AuthenticationManager", "org.springframework.security.authentication.ProviderManager", "org.springframework.security.authentication.dao.DaoAuthenticationProvider", "org.springframework.security.config.annotation.web.builders.HttpSecurity", "org.springframework.security.web.SecurityFilterChain", "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"], "external_methods": ["userService.loadUserByUsername", "new BCryptPasswordEncoder", "new ProviderManager", "csrf.disable", "cors", "sessionManagement", "authorizeHttpRequests", "requestMatchers", "permitAll", "authenticated", "addFilterBefore", "http.build"], "published": ["passwordEncoder", "userDetailsService", "authenticationManager", "jwtAuthenticationFilter", "filterChain"], "classes": [{"name": "SecurityConfig", "description": "Configuration class for setting up web security policies with JWT in a Spring Boot application."}], "methods": [{"name": "passwordEncoder", "description": "Creates a BCryptPasswordEncoder bean for password hashing."}, {"name": "userDetailsService", "description": "Provides a UserDetailsService implementation that delegates user lookup to UserService."}, {"name": "authenticationManager", "description": "Constructs an AuthenticationManager using a DaoAuthenticationProvider."}, {"name": "jwtAuthenticationFilter", "description": "Creates a JwtAuthenticationFilter bean for JWT token processing."}, {"name": "filterChain", "description": "Configures HttpSecurity to disable CSRF, enable CORS, set session policy, define endpoint access rules, and add JWT filter."}], "calls": ["userService.loadUserByUsername", "new BCryptPasswordEncoder", "new ProviderManager", "http.csrf", "http.cors", "http.sessionManagement", "http.authorizeHttpRequests", "auth.requestMatchers", "auth.permitAll", "auth.anyRequest", "http.addFilterBefore", "http.build"], "search-terms": ["SecurityConfig", "JWT", "SecurityFilterChain", "permitAllEndpoints", "JwtAuthenticationFilter", "HttpSecurity"], "state": 2, "file_id": 7, "knowledge_revision": 17, "git_revision": "", "hash": "cca10ba453eed66c2462200c8e7e7ec7", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/main/java/com/example/notesbackend/config/SecurityConfig.java", "revision_history": [{"17": ""}]}
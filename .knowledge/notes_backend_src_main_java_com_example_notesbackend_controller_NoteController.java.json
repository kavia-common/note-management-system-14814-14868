{"is_source_file": true, "format": "Java", "description": "This is a Java source file defining a Spring REST controller class named NoteController for handling CRUD operations on notes. It contains mappings for listing, creating, retrieving, updating, and deleting notes, interacting with NoteService and UserService, and converting Note entities to DTO responses.", "external_files": ["com/example/notesbackend/dto/NoteDtos.java", "com/example/notesbackend/model/Note.java", "com/example/notesbackend/model/User.java", "com/example/notesbackend/service/NoteService.java", "com/example/notesbackend/service/UserService.java", "org.springframework.http.ResponseEntity.java", "io.swagger.v3.oas.annotations.Operation.java", "io.swagger.v3.oas.annotations.tags.Tag.java", "jakarta.validation.Valid.java", "org.springframework.web.bind.annotation.*"], "external_methods": ["userService.getDomainUser(String)", "noteService.list(User)", "noteService.create(User, NoteDtos.NoteRequest)", "noteService.get(User, Long)", "noteService.update(User, Long, NoteDtos.NoteRequest)", "noteService.delete(User, Long)"], "published": ["com.example.notesbackend.controller.NoteController"], "classes": [{"name": "NoteController", "description": "REST controller managing CRUD operations for notes, handling HTTP requests mapped to /api/notes, converting entities to DTOs, and using injected services to perform business logic."}], "methods": [{"name": "currentUser", "description": "Retrieves the current authenticated User object based on the Authentication info."}, {"name": "list", "description": "Returns a list of all notes for the authenticated user."}, {"name": "create", "description": "Creates a new note for the authenticated user based on the provided request body."}, {"name": "get", "description": "Retrieves a specific note by ID for the authenticated user."}, {"name": "update", "description": "Updates an existing note identified by ID with the provided request data."}, {"name": "delete", "description": "Deletes a note by ID for the authenticated user."}, {"name": "toDto", "description": "Converts a Note entity to its corresponding NoteResponse DTO."}], "calls": ["userService.getDomainUser", "noteService.list", "noteService.create", "noteService.get", "noteService.update", "noteService.delete"], "search-terms": ["NoteController", "REST endpoints", "note CRUD", "/api/notes", "Spring", "Java", "DTO conversion"], "state": 2, "file_id": 19, "knowledge_revision": 41, "git_revision": "", "hash": "7b65988195e2bf8a56250138a012709f", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/main/java/com/example/notesbackend/controller/NoteController.java", "revision_history": [{"41": ""}]}
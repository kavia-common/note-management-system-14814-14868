{"is_source_file": true, "format": "Java", "description": "This Java class 'UserService' provides user-related operations including registration, loading user details for authentication, and retrieving domain user information. It integrates with a UserRepository for persistence and uses Spring Security for security-related features.", "external_files": ["com/example/notesbackend/model/User.java", "com/example/notesbackend/repository/UserRepository.java", "org.springframework.security.core.userdetails.UserDetails", "org.springframework.security.core.userdetails.UsernameNotFoundException", "org.springframework.security.crypto.password.PasswordEncoder", "org.springframework.security.core.authority.SimpleGrantedAuthority", "org.springframework.security.core.userdetails.User"], "external_methods": ["userRepository.existsByUsername(String)", "userRepository.findByUsername(String)", "userRepository.save(User)"], "published": ["com.example.notesbackend.service.UserService"], "classes": [{"name": "UserService", "description": "Service class responsible for user registration, authentication loading, and user retrieval operations within the notes backend system."}], "methods": [{"name": "register", "description": "Registers a new user with provided username and password, encoding the password and setting default roles."}, {"name": "loadUserByUsername", "description": "Loads user details for Spring Security authentication, converting user roles into granted authorities."}, {"name": "getDomainUser", "description": "Retrieves the domain User object by username."}], "calls": ["userRepository.existsByUsername", "userRepository.findByUsername", "userRepository.save", "encoder.encode", "Arrays.stream", "String::trim", "SimpleGrantedAuthority", "org.springframework.security.core.userdetails.User.withUsername", "org.springframework.security.core.userdetails.User.password", "org.springframework.security.core.userdetails.User.authorities", "org.springframework.security.core.userdetails.User.build"], "search-terms": ["UserService", "register", "loadUserByUsername", "UserRepository", "PasswordEncoder", "Spring Security"], "state": 2, "file_id": 16, "knowledge_revision": 35, "git_revision": "", "hash": "97dc84f6c29bcc4ed35e716117b2605a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/main/java/com/example/notesbackend/service/UserService.java", "revision_history": [{"35": ""}]}
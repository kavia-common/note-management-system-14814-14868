{"is_source_file": true, "format": "Java", "description": "This file defines the JwtService class, which provides methods to generate and validate JSON Web Tokens (JWTs) for authentication purposes.", "external_files": ["io.jsonwebtoken.Claims", "io.jsonwebtoken.Jwts", "io.jsonwebtoken.security.Keys", "org.springframework.beans.factory.annotation.Value", "org.springframework.stereotype.Service"], "external_methods": ["Jwts.builder()", "Jwts.parser()"], "published": ["generateToken", "extractUsername", "isTokenValid"], "classes": [{"name": "JwtService", "description": "Service class responsible for generating and validating JWT tokens."}], "methods": [{"name": "generateToken", "description": "Creates a JWT token for a specified username with provided claims, expiration is determined by ttlMillis."}, {"name": "extractUsername", "description": "Extracts the username (subject) claim from a token."}, {"name": "isTokenValid", "description": "Checks if the token is valid for the provided username by verifying the username and expiry."}, {"name": "isTokenExpired", "description": "Determines if the token has expired based on its expiration claim."}, {"name": "extractClaim", "description": "Generic method to extract any claim from the token using a resolver function."}], "calls": ["Jwts.builder()", "Jwts.parser()", "Jwts.builder().claims()", "Jwts.builder().subject()", "Jwts.builder().issuedAt()", "Jwts.builder().expiration()", "Jwts.builder().signWith()", "Jwts.parser().verifyWith()", "Jwts.parser().build()", "Jwts.parser().parseSignedClaims()"], "search-terms": ["JwtService", "generateToken", "extractUsername", "isTokenValid", "JWT_SECRET", "JWT_TTL_MILLIS", "jsonwebtoken", "JWT", "JWT validation", "JWT generation"], "state": 2, "file_id": 8, "knowledge_revision": 19, "git_revision": "", "hash": "6dcd24491805badc13ca03cbd5832840", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/main/java/com/example/notesbackend/security/JwtService.java", "revision_history": [{"19": ""}]}